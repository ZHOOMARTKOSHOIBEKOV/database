1. Создал базу данных productsdb
CREATE DATABASE productsdb;

2. Создал две таблицы: Products и History
CREATE TABLE Products
(
    Id INT IDENTITY PRIMARY KEY,
    ProductName NVARCHAR(30) NOT NULL,
    Manufacturer NVARCHAR(20) NOT NULL,
    ProductCount INT DEFAULT 0,
    Price MONEY NOT NULL
);
CREATE TABLE History 
(
    Id INT IDENTITY PRIMARY KEY,
    ProductId INT NOT NULL,
    Operation NVARCHAR(200) NOT NULL,
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
); 

3. Создал триггер Products_INSERT. Этот триггер срабатывает, когда добавляю данные таблице Products. 
GO
CREATE TRIGGER Products_INSERT
ON Products
AFTER INSERT
AS
INSERT INTO History (ProductId, Operation)
SELECT Id, 'Добавлен товар ' + ProductName + '   фирма ' + Manufacturer
FROM INSERTED;

4. Для проверки триггера добавил телефон. В результате выодится верный результат. Триггер работает. Процесс удаленных данных сохранится в таблицу History.
INSERT INTO Products (ProductName, Manufacturer, ProductCount, Price)
VALUES('iPhone X', 'Apple', 2, 79900)

SELECT * FROM History

5. Создал триггер Products_DELETE. Он начинает работать после удаления данных из таблицы Products. Процесс удаленных данных сохранится в таблицу History.
GO
CREATE TRIGGER Products_DELETE
ON Products
AFTER DELETE
AS
INSERT INTO History (ProductId, Operation)
SELECT Id, 'Удален товар ' + ProductName + '   фирма ' + Manufacturer
FROM DELETED

6. Удалил телефон под id=1 для проверки работоспособности триггера. В итоге показывает, значит работает.
USE productsdb;
DELETE FROM Products
WHERE Id=1
 
SELECT * FROM History

7. Создал триггер Products_UPDATE. Он начинает работать после изменения данных из таблицы Products. Процесс будет хранится в таблице History.
CREATE TRIGGER Products_UPDATE
ON Products
AFTER UPDATE
AS
INSERT INTO History(ProductId, Operation)
SELECT Id, 'Обновлен товар ' + ProductName + '   фирма ' + Manufacturer
FROM INSERTED

8. Проверка триггера. Работает!
UPDATE Products SET Manufacturer = 'Samsu'
WHERE Manufacturer = 'Samsung'

SELECT * FROM History
